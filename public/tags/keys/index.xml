<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Keys on schmichael&#39;s blog</title>
    <link>https://blog.schmichael.com/tags/keys/</link>
    <description>Recent content in Keys on schmichael&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 20 Mar 2008 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.schmichael.com/tags/keys/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Easy Rsync Remote Backups Using SSH Keys</title>
      <link>https://blog.schmichael.com/2008/03/19/easy-rsync-remote-backups-using-ssh-keys/</link>
      <pubDate>Thu, 20 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://blog.schmichael.com/2008/03/19/easy-rsync-remote-backups-using-ssh-keys/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.samba.org/rsync/&#34;&gt;Rsync&lt;/a&gt; is an excellent file transfer utility thats especially well suited for backing up files over the Internet because it only transfers the data that has changed. A friend asked me how to set it up, so I thought I&amp;#8217;d post what I sent him here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Goal:&lt;/strong&gt; Backup a directory from computer &lt;code&gt;Zim&lt;/code&gt; to computer &lt;code&gt;Ark&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Details:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Both &lt;code&gt;Zim&lt;/code&gt; and &lt;code&gt;Ark&lt;/code&gt; are subdomains of &lt;code&gt;example.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The user on &lt;code&gt;Ark&lt;/code&gt; which receives the backup files is named &lt;code&gt;backupuser&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The user on &lt;code&gt;Zim&lt;/code&gt; with access to the files you want to backup is named &lt;code&gt;steve&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://openssh.org/&#34;&gt;ssh&lt;/a&gt; installed on both hosts&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.samba.org/rsync/download.html&#34;&gt;rsync&lt;/a&gt; installed on both hosts&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Login to &lt;code&gt;Zim&lt;/code&gt; via &lt;code&gt;ssh&lt;/code&gt;: &lt;pre lang=&#34;bash&#34;&gt;ssh steve@zim.example.com&lt;/pre&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Generate a &lt;code&gt;ssh&lt;/code&gt; key pair using: &lt;pre lang=&#34;bash&#34;&gt;ssh-keygen -t rsa
&amp;lt;press enter when prompted where to save the key&amp;gt;
&amp;lt;press enter twice when asked for a passphrase&amp;gt;&lt;/pre&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To use the key to login to &lt;code&gt;Ark&lt;/code&gt; remotely without manually entering a password you need to copy the public key from &lt;code&gt;Zim&lt;/code&gt; to &lt;code&gt;Ark&lt;/code&gt; using: &lt;pre lang=&#34;bash&#34;&gt;ssh-copy-id -i .ssh/id_rsa.pub backupuser@ark.example.com&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;If you don&amp;#8217;t have &lt;code&gt;ssh-copy-id&lt;/code&gt; on your system, get a new system. ðŸ˜‰ If thats not possible you can download the script with:&lt;/p&gt;

&lt;pre lang=&#34;bash&#34;&gt;wget -O ssh-copy-id http://cvsweb.mindrot.org/index.cgi/~checkout~/openssh/contrib/ssh-copy-id?rev=1.6;content-type=text%2Fplain &amp;#038;&amp;#038; chmod +x ssh-copy-id&lt;/pre&gt;

&lt;p&gt;Then retry the above command only you&amp;#8217;ll need to prepend a &amp;#8220;./&amp;#8221;:&lt;/p&gt;

&lt;pre lang=&#34;bash&#34;&gt;./ssh-copy-id -i .ssh/id_rsa.pub backupuser@ark.example.com&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Verify the key copied properly by attempting to login to &lt;code&gt;Ark&lt;/code&gt;. You should &lt;em&gt;not&lt;/em&gt; be prompted for a password: &lt;pre lang=&#34;bash&#34;&gt;ssh backupuser@ark.example.com&lt;/pre&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Logout of &lt;code&gt;Ark&lt;/code&gt;. The key is setup, so you&amp;#8217;re now ready to rsync files without having to manually enter a password.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Test rsync by choosing a small file to backup and using: &lt;pre lang=&#34;bash&#34;&gt;rsync -tP /some/small/testfile backupuser@ark.example.com:/tmp&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;A nice little progress bar should be displayed as the file is transferred. Confirm that &amp;#8220;testfile&amp;#8221; is now in &lt;code&gt;/tmp&lt;/code&gt; on &lt;code&gt;Ark&lt;/code&gt;.&lt;/li&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You&amp;#8217;re finally ready to do a real rsync like: &lt;pre lang=&#34;bash&#34;&gt;rsync -t /directory/to/backup/* backupuser@ark.example.com:/existing/backup/directory&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; There are several useful options for rsync. Check &lt;code&gt;man rsync&lt;/code&gt; to find out more.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; &amp;#8212; preserve permissions (useful for backups, use -E if you only care about the executable bit)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; &amp;#8212; recursively backup directories.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-z&lt;/code&gt; &amp;#8212; compressed uncompressed files&lt;/li&gt;
&lt;li&gt;And just FYI: &lt;code&gt;-t&lt;/code&gt; tells rsync to use the last modified timestamp to determine whether or not to transfer files. It makes rsync a &lt;em&gt;lot&lt;/em&gt; faster at determining whether or not files have changed.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To schedule the backup to take place nightly at 1:13 AM edit your crontab using &lt;code&gt;crontab -e&lt;/code&gt; and insert the following line: &lt;pre lang=&#34;bash&#34;&gt;13 1 * * * rsync -qt /directory/to/backup/* backupuser@ark.example.com:/existing/backup/directory&lt;/pre&gt;&lt;/ol&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Caveats:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;These instructions will &lt;em&gt;push&lt;/em&gt; files from &lt;code&gt;Zim&lt;/code&gt; to &lt;code&gt;Ark&lt;/code&gt;. There&amp;#8217;s no reason why &lt;code&gt;Ark&lt;/code&gt; couldn&amp;#8217;t &lt;em&gt;pull&lt;/em&gt; files from &lt;code&gt;Zim&lt;/code&gt;. In fact, this is often &lt;strong&gt;more secure&lt;/strong&gt; if &lt;code&gt;Zim&lt;/code&gt; is a web server with a larger attack surface than &lt;code&gt;Ark&lt;/code&gt;. Mea culpa.&lt;/li&gt;
&lt;li&gt;If the IP address of &lt;code&gt;Ark&lt;/code&gt; is dynamic, use a service like [dyndns.com][4]. Otherwise SSH will give you errors.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Major security warning:&lt;/em&gt; If someone breaks into &lt;code&gt;Zim&lt;/code&gt;, they can also delete all of your backups on &lt;code&gt;Ark&lt;/code&gt;. Never ever ever use the &lt;code&gt;root&lt;/code&gt; user for backups on &lt;code&gt;Ark&lt;/code&gt;. You can use the &lt;code&gt;root&lt;/code&gt; user on &lt;code&gt;Zim&lt;/code&gt; to send the backups, but its best to have a special backup user setup on &lt;code&gt;Ark&lt;/code&gt; to receive the backup.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[4]: &lt;a href=&#34;http://www.dyndns.com&#34;&gt;http://www.dyndns.com&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>