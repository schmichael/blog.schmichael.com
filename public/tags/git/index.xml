<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on </title>
    <link>/tags/git/</link>
    <description>Recent content in Git on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 26 Feb 2009 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Bazaar: DVCS for Dummies</title>
      <link>/2009/02/26/bazaar-dvcs-for-dummies/</link>
      <pubDate>Thu, 26 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/02/26/bazaar-dvcs-for-dummies/</guid>
      <description>&lt;p&gt;I like &lt;a href=&#34;http://bazaar-vcs.org/&#34;&gt;Bazaar (bzr)&lt;/a&gt;. It doesn&amp;#8217;t make me popular in the &lt;a href=&#34;http://www.selenic.com/mercurial/&#34;&gt;Mercurial&lt;/a&gt;-centric Pythonosphere. It doesn&amp;#8217;t make me a 1337 ÃƒÂ¼ber hacker like &lt;a href=&#34;http://whygitisbetterthanx.com/&#34;&gt;git&lt;/a&gt; would.&lt;/p&gt;

&lt;p&gt;However, it does meet the most important criteria: &lt;strong&gt;It just works&lt;/strong&gt; &lt;em&gt;for me&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now for the big disclaimer: Most of the projects I use bzr to manage fall into 1 of 2 categories:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Projects with small teams (1-4 developers)&lt;/li&gt;
&lt;li&gt;Public projects where I just want to grab the source and maybe maintain some local patches&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If I needed to somehow manage a project with dozens or hundreds of contributors (like Gnome or the Linux Kernel), git would probably look a lot more appealing to me. After all, it was designed for large code bases with lots of contributors and branches.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve seen lots of &lt;a href=&#34;http://www.nardol.org/2009/2/19/git-basics-reversing-the-git-sucks-effect&#34;&gt;git cookbooks popping up lately&lt;/a&gt;, so I thought I&amp;#8217;d explain my bzr workflow for the 2 use cases I list above.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Starting and sharing a project with a small team&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Prerequisite: You&amp;#8217;ve created a directory with some code in it.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Turn your source code directory into a bzr repository: &lt;pre lang=&#34;bash&#34;&gt;~/src/foo$ bzr init&lt;/pre&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Add you source files: &lt;pre lang=&#34;bash&#34;&gt;~/src/foo$ bzr add&lt;/pre&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Commit: &lt;pre lang=&#34;bash&#34;&gt;~/src/foo$ bzr ci&lt;/pre&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Push my changes to a remote location* other team members can access: &lt;pre lang=&#34;bash&#34;&gt;~/src/foo$ bzr push &amp;ndash;remember sftp://some/file/server&lt;/pre&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Done! My favorite part is that besides the &lt;code&gt;--remember&lt;/code&gt; option, bzr just does what you expect without any flags or configuring. The &lt;code&gt;--remember&lt;/code&gt; option simply tells bzr to use that location for future &lt;code&gt;push&lt;/code&gt; commands (so you can drop all the typing after &amp;#8220;push&amp;#8221;).&lt;/p&gt;

&lt;p&gt;For more information check out the &lt;a href=&#34;http://doc.bazaar-vcs.org/bzr.dev/en/user-guide/index.html#sharing-with-peers&#34;&gt;excellent bazaar documentation on sharing code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Getting the code for an open source project&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately most big bzr-hosted projects are on Launchpad which makes for a pretty boring demonstration:&lt;/p&gt;

&lt;pre lang=&#34;bash&#34;&gt;~/src$ bzr branch lp:terminator # yawn
&lt;/pre&gt;

&lt;p&gt;To make matters worse, non-Launchpad hosted projects are nearly as dull:&lt;/p&gt;

&lt;pre lang=&#34;bash&#34;&gt;~/src$ bzr branch http://bzr.savannah.gnu.org/r/gnash/trunk
&lt;/pre&gt;

&lt;p&gt;In each case bzr will create a new directory for you using the last part of the source path (terminator &amp;amp; trunk respectively). You can optionally give it a second argument to put the branch in a different location. The destination can even be a remote server!&lt;/p&gt;

&lt;pre lang=&#34;bash&#34;&gt;~/src$ bzr branch http://source/branch sftp://destination/branch
&lt;/pre&gt;

&lt;p&gt;Ok now I&amp;#8217;m just showing off. I&amp;#8217;ve never found a use for that feature. ðŸ˜‰ However, I do appreciate that a location is a location to bzr regardless of whether that location is the local filesystem or a remote server. It just works how you&amp;#8217;d expect it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://doc.bazaar-vcs.org/bzr.dev/en/user-guide/index.html&#34;&gt;Chapters 4-6 of Bazaar&amp;#8217;s documentation&lt;/a&gt; give some excellent examples of various collaboration workflows.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Bonus Feature:&lt;/em&gt; Subversion mode!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So its not really &lt;em&gt;Subversion mode&lt;/em&gt;, but bzr does support pulling repositories via the &lt;code&gt;checkout&lt;/code&gt; command and updating your working copy from the remote repository via the &lt;code&gt;update&lt;/code&gt; command just like Subversion. As you would expect, the &lt;code&gt;commit&lt;/code&gt; now sends changes directly to the remote server.&lt;/p&gt;

&lt;p&gt;While I&amp;#8217;ve used this feature mainly to make transitioning to bzr easier for Subversion users, [Bazaar&amp;#8217;s documentation has some excellent techniques for making advanced workflows easier using checkouts][7].&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;** SSH Tips: &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
&lt;li&gt;bzr+ssh is faster than plain old sftp but requires bzr to be installed on the server.&lt;/li&gt;
&lt;li&gt;Setup ssh connection multiplexing using &lt;code&gt;ControlMaster&lt;/code&gt; in &lt;code&gt;~/.ssh/config&lt;/code&gt; and leave an ssh session active to speed up bzr operations.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[7]: &lt;a href=&#34;http://doc.bazaar-vcs.org/bzr.dev/en/user-guide/index.html#using-checkouts&#34;&gt;http://doc.bazaar-vcs.org/bzr.dev/en/user-guide/index.html#using-checkouts&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Time to Learn Git?</title>
      <link>/2009/01/04/time-to-learn-git/</link>
      <pubDate>Sun, 04 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/01/04/time-to-learn-git/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Doh! Sorry for flooding everyone&amp;#8217;s feed readers with my epic post. Evidently WordPress ignored my &amp;#8220;more&amp;#8221; tag. &lt;small&gt;I think I ran into this problem before&amp;#8230;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update 2:&lt;/strong&gt; Retracted the meaningless Google Trends point. Thanks to commenters for pointing out how meaningless it was. I still feel like git has a much stronger web presence than bzr or hg, but its just another one of the many &amp;#8220;gut feelings&amp;#8221; in this post. &lt;img src=&#34;http://localhost/wp-includes/images/smilies/simple-smile.png&#34; alt=&#34;:-)&#34; class=&#34;wp-smiley&#34; style=&#34;height: 1em; max-height: 1em;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The DVCS wars have been raging for a while now, and in case you haven&amp;#8217;t been keeping score, &lt;strong&gt;git is winning&lt;/strong&gt;. Admittedly I have no proof and don&amp;#8217;t even know if proof is possible, but I have some good evidence of git&amp;#8217;s march toward VCS dominance:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://upsilon.cc/~zack/stuff/vcs-usage/&#34;&gt;Git dominates every other DVCS by an order of magnitude among Debian packages (that link to their upstream repository).&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blogs.gnome.org/newren/2009/01/03/gnome-dvcs-survey-results/&#34;&gt;A recent survey of Gnome developers found an overwhelming support for Git&lt;/a&gt; over other VCSes.&lt;/li&gt;
&lt;li&gt;&lt;del datetime=&#34;2009-01-04T18:30:56+00:00&#34;&gt;&lt;a href=&#34;http://www.google.com/trends?q=git%2Cbzr%2Cmercurial&#34;&gt;Git dominates Google trends&lt;/a&gt;.&lt;/del&gt; &lt;small&gt;Speaking of Google, they have 4 &lt;a href=&#34;http://research.google.com/video.html&#34;&gt;Tech Talks&lt;/a&gt; on Git, and absolutely none for bzr &lt;del datetime=&#34;2009-01-05T16:53:00+00:00&#34;&gt;or hg&lt;/del&gt;. Update: hg has one &amp;#8211; see comments.&lt;/small&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://whygitisbetterthanx.com/&#34;&gt;Why Git is Better than X&lt;/a&gt; &amp;#8211; More than the site, the lack of popular counter-argument sites springing up leads me to believe hg and [bzr][4] don&amp;#8217;t have nearly as fanatical of supporters.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also note some of the major upstream projects using each DVCS:&lt;/p&gt;

&lt;div style=&#34;float: left; width: 150px; text-align: left;&#34;&gt;
  &lt;strong&gt;&lt;a href=&#34;http://git.or.cz/gitwiki/GitProjects&#34;&gt;git&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  
  &lt;ul&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://kernel.org/&#34;&gt;Linux Kernel&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://git.fedoraproject.org/&#34;&gt;Fedora&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://cgit.freedesktop.org/&#34;&gt;X.org/FreeDesktop&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://dev.perl.org/perl5/source.html&#34;&gt;Perl&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://rubyonrails.org/&#34;&gt;Ruby on Rails&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://git.samba.org/&#34;&gt;Samba&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://wiki.winehq.org/GitWine&#34;&gt;Wine&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://dev.laptop.org/browser&#34;&gt;OLPC&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  
  &lt;p&gt;
    Get the idea yet?
  &lt;/p&gt;
&lt;/div&gt;

&lt;div style=&#34;float: left; width: 150px; text-align: left;&#34;&gt;
  &lt;strong&gt;&lt;a href=&#34;http://bazaar-vcs.org/WhoUsesBzr&#34;&gt;bzr&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  
  &lt;ul&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://dev.mysql.com/tech-resources/articles/getting-started-with-bazaar-for-mysql.html&#34;&gt;MySQL&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;https://wiki.ubuntu.com/Bzr#The%20Bazaar%20or%20%22An%20Explanation%20of%20Bazaar%20for%20the%20(Almost)%20Typical%20Contributor%22&#34;&gt;Ubuntu&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://www.list.org/&#34;&gt;Mailman&lt;/a&gt;&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;

&lt;div style=&#34;float: left; width: 150px; text-align: left;&#34;&gt;
  &lt;strong&gt;&lt;a href=&#34;http://www.selenic.com/mercurial/wiki/index.cgi/ProjectsUsingMercurial&#34;&gt;hg&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  
  &lt;ul&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://hg.mozilla.org/&#34;&gt;Mozilla&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://openjdk.java.net/&#34;&gt;OpenJDK&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://xenbits.xensource.com/&#34;&gt;Xen&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://pylonshq.com/&#34;&gt;Pylons&lt;/a&gt;&lt;small&gt; (not quite major but it will have to do)&lt;/small&gt;
    &lt;/li&gt;&lt;/div&gt; 
    

&lt;pre&gt;&lt;code&gt;&amp;lt;div style=&amp;quot;clear:both;&amp;quot;&amp;gt;
  &amp;amp;nbsp;
&amp;lt;/div&amp;gt;

&amp;lt;p&amp;gt;
  &amp;lt;strong&amp;gt;Communities&amp;lt;/strong&amp;gt;
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  Git seems to be attracting the most diverse communities as well:
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  &amp;lt;em&amp;gt;Git:&amp;lt;/em&amp;gt; Linux Kernel, X.org/FreeDesktop, Ruby on Rails&amp;lt;br /&amp;gt; &amp;lt;em&amp;gt;Bazaar:&amp;lt;/em&amp;gt; Ubuntu, Ubuntu, Ubuntu&amp;lt;br /&amp;gt; &amp;lt;em&amp;gt;Mercurial:&amp;lt;/em&amp;gt; Pythonistas, projects that need better Windows support than Git offers
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  &amp;lt;small&amp;gt;Once again I don&amp;amp;#8217;t really have any stats to back up these assertions, they&amp;amp;#8217;re just my biased observations.&amp;lt;/small&amp;gt;
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  &amp;lt;strong&amp;gt;Personally&amp;amp;#8230;&amp;lt;/strong&amp;gt;
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  I tried learning Git soon after it was first released and failed like so many others. Unlike many of those others, I never went back to give it another shot.
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  Next I learned Bazaar and felt comfortable in it almost immediately. Now I use Bazaar as my preferred VCS and quite like it mainly because it works well and was very easy to learn. I know its not the fastest, but its so far from being a bottleneck in my development process I don&amp;amp;#8217;t notice.
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  I learned Mercurial for work and use it at least as much as Bazaar, but I&amp;amp;#8217;m not sure why anyone would use it over Bazaar. I think people who learned Mercurial first think the same thing about Bazaar. ðŸ˜‰
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  And perhaps thats part of why Git is winning. It seems fundamentally different from the other two which is probably why its the only 1 of the 3 I haven&amp;amp;#8217;t learned.
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  &amp;lt;strong&amp;gt;&amp;lt;em&amp;gt;THE FUTURE!!!!!!!11&amp;lt;/em&amp;gt;&amp;lt;/strong&amp;gt;
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  I actually don&amp;amp;#8217;t plan on learning git any time soon. &amp;lt;a href=&amp;quot;http://michael.susens-schurter.com/blog/2008/12/27/web-server-quandary/&amp;quot;&amp;gt;My time for playing with new technology is currently taken up testing nginx, spawning, and FastCGI&amp;lt;/a&amp;gt;.
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  I suspect thats the norm as well: people who already know a DVCS &amp;lt;em&amp;gt;probably&amp;lt;/em&amp;gt; aren&amp;amp;#8217;t looking to migrate between them. The few that are, are probably moving to Git.
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  I think we&amp;amp;#8217;ll see the current trend of Git&amp;amp;#8217;s lead widening over bzr and hg as well.
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  However, &amp;lt;em&amp;gt;&amp;lt;strong&amp;gt;I don&amp;amp;#8217;t see the war ending anytime soon. The fact of the matter is all 3 of them are great&amp;lt;/strong&amp;gt;&amp;lt;/em&amp;gt; and the weaker DVCSes have already fallen prey to evolutionary forces (monotone, darcs, etc).
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  &amp;lt;strong&amp;gt;Flamebait&amp;lt;/strong&amp;gt;
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  What are your thoughts on my completely contrived DVCS War? Which do you prefer? How many do you use? Are my assumptions about popularity (in particular the various communities around each) accurate?
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  &amp;lt;small&amp;gt;I wish &amp;lt;a href=&amp;quot;https://www.ohloh.net/&amp;quot;&amp;gt;Ohloh&amp;lt;/a&amp;gt; or &amp;lt;a href=&amp;quot;http://cia.vc/&amp;quot;&amp;gt;cia.vc&amp;lt;/a&amp;gt; gave VCS usage statistics, although I&amp;amp;#8217;m not even sure they record that data.&amp;lt;/small&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;[4]: &lt;a href=&#34;http://whybzrisbetterthanx.github.com/&#34;&gt;http://whybzrisbetterthanx.github.com/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>