<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Json on schmichael&#39;s blog</title>
    <link>https://blog.schmichael.com/tags/json/</link>
    <description>Recent content in Json on schmichael&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 26 Apr 2009 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.schmichael.com/tags/json/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Handy Python Progress for JSON module</title>
      <link>https://blog.schmichael.com/2009/04/26/handy-python-progress-for-json-module/</link>
      <pubDate>Sun, 26 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>https://blog.schmichael.com/2009/04/26/handy-python-progress-for-json-module/</guid>
      <description>&lt;p&gt;I&amp;#8217;ve been spending a good deal of time the past couple of days processing large JSON files to try and fix some corrupted data (long story, short version: my fault). While JSON is a fast file format to work with, processing &amp;gt; 50 MB of any data format takes some time.&lt;/p&gt;

&lt;p&gt;So to give myself some idea of what was going on, I whipped up a small progress bar for Python 2.6&amp;#8217;s &lt;a href=&#34;http://docs.python.org/library/json.html&#34;&gt;json&lt;/a&gt; module (works on [simplejson][2] if you&amp;#8217;re still using 2.&lt;sup&gt;4&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt;.5):&lt;/p&gt;

&lt;pre lang=&#34;python&#34;&gt;import sys

class JsonProgress(object):
    def __init__(self):
        self.count = 0

    def __call__(self, obj):
        self.count += 1
        sys.stdout.write(&#34;\r%8d&#34; % self.count)
        return obj
&lt;/pre&gt;

&lt;p&gt;And then use it as the object_hook when loading JSON:&lt;/p&gt;

&lt;pre lang=&#34;python&#34;&gt;f = open(&#39;foo.json&#39;)
foo = json.load(f, object_hook=JsonProgress())
print &#34;\rDone&#34; # \r in the next line erases the progress output
&lt;/pre&gt;

&lt;p&gt;Although JsonProgress is a poor name since its also useful in generic list comprehensions:&lt;/p&gt;

&lt;pre lang=&#34;python&#34;&gt;progress = JsonProgress()
foo = [progress(x) for x in bar]
print &#34;\nDone&#34; # \n prints a newline so the progress output is kept
&lt;/pre&gt;

&lt;p&gt;Obviously this is a performance hit, but still quite handy for personal use when you just want to know that &lt;em&gt;something&lt;/em&gt; is happening.&lt;/p&gt;

&lt;p&gt;[2]: &lt;a href=&#34;http://pypi.python.org/pypi/simplejson&#34;&gt;http://pypi.python.org/pypi/simplejson&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>