<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Urbanairship on schmichael&#39;s blog</title>
    <link>https://blog.schmichael.com/tags/urbanairship/</link>
    <description>Recent content in Urbanairship on schmichael&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 03 Feb 2011 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.schmichael.com/tags/urbanairship/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>schmongodb slides from Update Portland</title>
      <link>https://blog.schmichael.com/2011/02/02/schmongodb-slides-from-update-portland/</link>
      <pubDate>Thu, 03 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://blog.schmichael.com/2011/02/02/schmongodb-slides-from-update-portland/</guid>
      <description>&lt;p&gt;A few months ago someone in #pdxwebdev on Freenode asked an innocent &lt;a href=&#34;http://www.mongodb.org&#34;&gt;MongoDB&lt;/a&gt; question. In response I ranted seemingly endlessly about our experience with MongoDB at &lt;a href=&#34;http://urbanairship.com&#34;&gt;Urban Airship&lt;/a&gt;. After a few moments somebody (perhaps sarcastically? who can know on IRC) suggested I give a talk on my experiences with MongoDB. That led me to realize despite &lt;a href=&#34;http://calagator.org/&#34;&gt;Portland&amp;#8217;s amazing meetup culture&lt;/a&gt; there were no tech-meetups that focused on either:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Narrative talks based on experiences in production &lt;small&gt;(&lt;em&gt;not&lt;/em&gt; how-tos)&lt;/small&gt;&lt;/li&gt;
&lt;li&gt;Database-agnostic backend systems focused groups &lt;small&gt;(&lt;em&gt;not&lt;/em&gt; just a NoSQL meetup)&lt;/small&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So I started one: &lt;a href=&#34;http://www.meetup.com/updatepdx/&#34;&gt;Update Portland&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And I gave my promised MongoDB talk: &lt;a href=&#34;https://docs.google.com/present/view?id=ddzswzbr_104f2sgp8dq&#34;&gt;schmongodb&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And &lt;a href=&#34;http://twitter.com/meghanpgill/status/23455639216848896&#34;&gt;10gen sent swag&lt;/a&gt;! (Thanks to &lt;a href=&#34;http://twitter.com/meghanpgill&#34;&gt;Meghan&lt;/a&gt;! It was a big hit.)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;And&lt;/em&gt; my brilliant coworker &lt;a href=&#34;http://twitter.com/eonnen&#34;&gt;Erik Onnen&lt;/a&gt; gave a short talk on how he&amp;#8217;s beginning to use &lt;a href=&#34;http://sna-projects.com/kafka/&#34;&gt;Kafka&lt;/a&gt; at Urban Airship. (Expect a long form talk on that in the future!)&lt;/p&gt;

&lt;p&gt;Thanks to everyone who showed up. I had a great time and have high hopes for the upcoming meetings. (Sign up for the &lt;a href=&#34;http://groups.google.com/group/update-pdx&#34;&gt;mailing list&lt;/a&gt;!)&lt;/p&gt;

&lt;p&gt;The slides may come across as overly negative. After all Urban Airship is actively moving away from MongoDB for our largest and busiest pieces of data. So I want to make 2 things very clear:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I like MongoDB and would like to use it again in the future. There&amp;#8217;s a lot I don&amp;#8217;t like about it, but I can&amp;#8217;t think of any &amp;#8220;perfect&amp;#8221; piece of software.&lt;/li&gt;
&lt;li&gt;The IO situation in EC2, particularly EBS&amp;#8217;s poor performance (RAIDing really doesn&amp;#8217;t help) made life with MongoDB miserable. This story may have been very different if we were running MongoDB on bare metal with fast disks.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[Mike Herrick, the VP of Engineering at Urban Airship][11], put me on the spot at the end of my talk by asking me by asking me: &lt;strong&gt;&amp;#8220;Knowing what you know now, what would you have done differently?&amp;#8221;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I didn&amp;#8217;t have a good answer, and I still don&amp;#8217;t. Despite all of the misadventures, MongoDB wasn&amp;#8217;t the wrong choice. Scaling systems is just hard, and if you want something to work under load, you&amp;#8217;re going to have to learn all of its ins and outs. We initially started moving to Cassandra, and while it has tons of wonderful attributes, we&amp;#8217;re running into plenty of problems with it as well.&lt;/p&gt;

&lt;p&gt;So I think the answer is &lt;em&gt;knowing then what I know now&lt;/em&gt;. In other words: &lt;strong&gt;Do your homework&lt;/strong&gt;. That way we could have avoided these shortcomings and perhaps still be happy with MongoDB today. Hopefully these slides will help others in how they plan to use MongoDB so they can use it properly and happily.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I added lots of comments to the speaker notes, so you&amp;#8217;ll probably want to view those while looking at the slides.&lt;/p&gt;

&lt;p&gt;[11]: &lt;a href=&#34;http://www.mikeherrick.com/&#34;&gt;http://www.mikeherrick.com/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Less Pagination, More More</title>
      <link>https://blog.schmichael.com/2010/07/16/less-pagination-more-more/</link>
      <pubDate>Sat, 17 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.schmichael.com/2010/07/16/less-pagination-more-more/</guid>
      <description>&lt;p&gt;We live in a brave new (to some) world of databases other than a relational database with a SQL interface. Normally end users never notice a difference, but the astute viewer may notice the slow demise of an old friend: pagination.&lt;/p&gt;

&lt;p&gt;Traditionally with SQL databases pagination has looked something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://schmichael.com/files/pagination.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;There are previous and next links as well as links for jumping right to the beginning and end. Pretty boring stuff.&lt;/p&gt;

&lt;p&gt;What&amp;#8217;s interesting is that this standard interface is disappearing in favor of something like this:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Twitter&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://schmichael.com/files/twitter-more.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Facebook&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://schmichael.com/files/facebook-more.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;And soon beta testers of &lt;a href=&#34;http://blog.urbanairship.com/2010/05/25/android-delivers-push-notifications-are-here-to-stay/&#34;&gt;Urban Airship&amp;#8217;s push service for Android&lt;/a&gt; will see a More link on the page that lists devices associated with their app:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://schmichael.com/files/apids-more.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The simplest possible explanation for this dumbing down of pagination is that &lt;strong&gt;count (for total pages) and skip/offset are expensive operations.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Not only are those operations expensive, but in eventually consistent databases, which many modern non-relational databases are, they&amp;#8217;re extremely expensive, if not impossible, to perform.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cassandra&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At Urban Airship we, like Facebook, use &lt;a href=&#34;http://cassandra.apache.org/&#34;&gt;Cassandra&lt;/a&gt;: a distributed column-based database. This deals two deadly blows to traditional pagination:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;No way to count columns in a row (without reading every column).&lt;/li&gt;
&lt;li&gt;No way to skip by numeric offset (so you can&amp;#8217;t say, skip to page 5).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In Cassandra columns are ordered, so you start reading from the beginning and read N+1 columns where N is the number of items you&amp;#8217;d like to display. The last column&amp;#8217;s key is then used to determine whether the More link is enabled, and if so, what key to start the next &amp;#8220;page&amp;#8221; at.&lt;/p&gt;

&lt;p&gt;Both of those are solvable problems if you really need them, but I would suspect you would end up creating a column count cache as well as some sort of table of contents for the various page offsets. Not what I want to spend my time implementing.&lt;/p&gt;

&lt;p&gt;The fact of the matter is that for many use cases, a simple More button works just as well (if not better) than traditional pagination. It&amp;#8217;s also far cheaper to implement, which means more developer time free to work on features and more hardware resources available to push your 140 character insights around the web.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MongoDB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I should note that MongoDB is fairly unique in the non-relational database world as its dynamic querying features include &lt;a href=&#34;http://www.mongodb.org/display/DOCS/Aggregation#Aggregation-Count&#34;&gt;count&lt;/a&gt; and [skip][8] operations. However, as with any database, you&amp;#8217;ll want to make sure these queries hit indexes.&lt;/p&gt;

&lt;p&gt;Sadly MongoDB currently doesn&amp;#8217;t have the distributed features necessary to automatically handle data too big for a single server.&lt;/p&gt;

&lt;p&gt;[8]: &lt;a href=&#34;http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D&#34;&gt;http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>