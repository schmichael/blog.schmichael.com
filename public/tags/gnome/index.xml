<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gnome on </title>
    <link>/tags/gnome/</link>
    <description>Recent content in Gnome on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 03 Jun 2009 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/gnome/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>My Gnome 3.0: A Real Web Desktop</title>
      <link>/2009/06/02/my-gnome-30-a-real-web-desktop/</link>
      <pubDate>Wed, 03 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/06/02/my-gnome-30-a-real-web-desktop/</guid>
      <description>&lt;p&gt;So I missed the &lt;a href=&#34;http://www.google.com/cse?cx=007525575524326405779%3Ac0gv0y410u0&amp;amp;q=gnome+3.0&amp;amp;cof=FORID%3A0&#34;&gt;stream of What I Want for &lt;strike&gt;Christmas&lt;/strike&gt; Gnome 3.0&lt;/a&gt; by &amp;#8230; a while, but better late than never!*&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Win&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Essentially what I want for Gnome 3.0 is what &lt;a href=&#34;http://automorphic.blogspot.com/2009/05/tomboy-0151-release-brings-new-online.html&#34;&gt;Tomboy just got: a web interface&lt;/a&gt; called &lt;a href=&#34;http://live.gnome.org/Snowy&#34;&gt;Snowy&lt;/a&gt;. Part synchronization, part collaboration, all &amp;#8220;cloud&amp;#8221; for those buzzword minded among us.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Fail&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Luckily there&amp;#8217;s already Conduit which I think does the synchronization bit&amp;#8230; I say &amp;#8220;I think&amp;#8221; because I&amp;#8217;ve never actually gotten Conduit to work. I drag &amp;amp; drop F-Spot onto the canvas**, neat. I drag &amp;amp; drop Network to the right of F-Spot, neat. Now what? There&amp;#8217;s no configure option for Network. Heck, there&amp;#8217;s not even a Remove*** for Network. I right click and select Synchronize in hopes it will prompt me for details, but instead it happily reports synchronization is finished. &lt;em&gt;Huh?!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I poke around in Preferences hoping for guidance on how to sync to another computer over a network. Wow. The first tab is fine, but the other 2 tabs are just long lists of text. Wait a second, if you scroll &lt;em&gt;horizontally&lt;/em&gt; to the right in the Data Providers tab you can see a checkbox to load/unload them! Why you&amp;#8217;d want this option other than for development, I&amp;#8217;m not sure, but its there if you know where to look.&lt;/p&gt;

&lt;p&gt;At this point &lt;em&gt;Conduit has failed to gain my trust, so I give up.&lt;/em&gt; I&amp;#8217;m fine with Pidgin being crash happy or Eclipse being ridiculously complex to configure. The former isn&amp;#8217;t mission critical and the latter is intended for developers.&lt;/p&gt;

&lt;p&gt;However, I&amp;#8217;m expected to entrust all of my files to Conduit. Files and account information for network resources if I could figure out how to get that to work. I have pretty high expectations for anything I&amp;#8217;m entrusting my files and passwords too. Right now Conduit seems more like a demo of GTK+&amp;#8217;s canvas drawing abilities (it is pretty looking) than a powerful synchronization tool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Dream&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;My expectations for web enabling Gnome are &lt;strong&gt;insanely&lt;/strong&gt; high.&lt;/em&gt; Synchronization isn&amp;#8217;t enough (although it&amp;#8217;d be an excellent start). I need web enabled collaboration features as well. I need it to Just Work&amp;trade; as well as be Secure By Default&amp;trade;.&lt;/p&gt;

&lt;p&gt;This means:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;All applications can synchronize their &lt;em&gt;settings&lt;/em&gt; and &lt;em&gt;data&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;All data has some sort of web viewable format and ideally a way to interact with it on the web as well.&lt;/li&gt;
&lt;li&gt;By default all settings and data should be &lt;em&gt;private&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Fine-grained CRUD permissions for all settings and data. The C&lt;small&gt;reate&lt;/small&gt; and U&lt;small&gt;pdate&lt;/small&gt; are key here: not only should I be able to give other users the ability to edit my files but Grandma should be able to upload photos to my photo album.&lt;/li&gt;
&lt;li&gt;While I&amp;#8217;m dreaming can I add versioning support (&lt;a href=&#34;https://www.getdropbox.com/referrals/NTE2ODkwNDk&#34;&gt;like Dropbox&lt;/a&gt;)? Cool, thanks. ðŸ˜‰&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The Implementation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately I think Conduit is the wrong way to go. The concept is sound, but &lt;a href=&#34;http://www.jwz.org/doc/worse-is-better.html&#34;&gt;Worse Is Better&amp;trade;&lt;/a&gt;: each application needs to be allowed to implement their own integration with the cloud synchronization and collaboration system. There&amp;#8217;s too many application specific tasks to accomplish intuitive synchronization and collaboration features outside the main application.&lt;/p&gt;

&lt;p&gt;Tomboy has had pretty good synchronization for a while now. &lt;a href=&#34;https://labs.mozilla.com/projects/weave/&#34;&gt;Firefox is getting it with Weave&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In a way F-Spot and Banshee support 1-way synchronization and collaboration. F-Spot can upload photos to a variety of services which have all (or at least most) of the features I&amp;#8217;m pining for. Banshee&amp;#8217;s ability to download Podcasts and music synchronize to iPods (note: I&amp;#8217;ve never used that feature) is a sort of primordial synchronization. If only &lt;a href=&#34;http://idea.opensuse.org/content/ideas/web-interface-to-banshee-library&#34;&gt;Banshee Web&lt;/a&gt; had survived (and wasn&amp;#8217;t written in ASP.NET, the ickiest of all webdev platforms). [Abiword has been toying with cloud services for a little while as well.][8]&lt;/p&gt;

&lt;p&gt;Perhaps Evolution is the poster child for this: I currently use it as a Gmail and Gcal interface sometimes because there are certain use cases for which I prefer it (shocking I know!). Despite its past reputation for being bloated and buggy, it Just Works&amp;tm; these days and integrates beautifully with the rest of the Gnome desktop (are those calendar events in my system tray calendar?! amazing! Pidgin integration?! &amp;lt;3 Evolution). Evolution lives completely in the cloud and synchronizes everything locally beautifully (after years and years of effort). &lt;strong&gt;Why Gnome Can Do It&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Gimp is actually the first Gnome app to really make me realize working on the web &lt;em&gt;can&lt;/em&gt; and &lt;em&gt;should&lt;/em&gt; be as easy as working locally. All it did was utilize Gnome&amp;#8217;s VFS to edit and save images via FTP or SSH. With Gnome&amp;#8217;s screenshot tool, I can save a screenshot to a web accessible location in 1 keypress and 2 clicks. Amazing! Thats almost as fast and easy as using a pastebin tool on the command line for sharing text.&lt;/p&gt;

&lt;p&gt;Snowy seems like an excellent poster child for the web interface I&amp;#8217;m whining about. I haven&amp;#8217;t used it yet, but the very idea that Tomboy already has an open source reference implementation is an excellent start. 3rd parties could implement the protocols and offer competing services.&lt;/p&gt;

&lt;p&gt;In an ideal world this would create a revenue stream for open source applications: services like Dropbox could support the synchronization and collaboration protocols and in return support development of the projects. The more people who use apps that integrate seamlessly with Dropbox, the more people who pay for Dropbox&amp;#8230; or box.net or Amazon or&amp;#8230; you get the idea.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FreeDesktop.org Does What?!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That&amp;#8217;s right, FreeDesktop.org needs to lead the charge here. Its not enough that the protocols are open, application developers need libraries to make synchronization and collaboration &lt;em&gt;easy&lt;/em&gt;. In that way Conduit is right: each application should not completely reinvent the wheel.&lt;/p&gt;

&lt;p&gt;FreeDesktop.org needs to follow Mozilla&amp;#8217;s lead. Mozilla realized early on that in order for their browser business to succeed, they needed &lt;em&gt;open standards to succeed&lt;/em&gt;. FreeDesktop.org needs to do the same. A KDE application should be able to synchronize to the same service as a Gnome app (this is where Conduit&amp;#8217;s monolithic-master-synchronization-app model seems too optimistic to succeed). OSX and Windows apps should be able to use the base synchronization libraries as well, even if they don&amp;#8217;t use GTK+ or QT.&lt;/p&gt;

&lt;p&gt;At the end of the day I should be able to sync my photos, documents, and mp3s between my laptop, desktop, cell phone, Kindle, etc as well as any relevant application settings (Tomboy for Kindle?! yes please!). &amp;#8230;and so much more.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;* Not always true. For example: posting opinions on a piece of software long after the roadmap has been made.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;** Strike 1 against Conduit: &amp;#8220;Canvas&amp;#8221; isn&amp;#8217;t a very end user friendly term &lt;abbr title=&#34;in my humble opinion&#34;&gt;IMHO&lt;/abbr&gt;. A minor complaint, but as confusing as the UI already is, it needs all the help it can get. Perhaps the problem isn&amp;#8217;t the name &amp;#8220;Canvas&amp;#8221; but rather that the fact that it doesn&amp;#8217;t even need to be said. Remove all references to it and just put a textbox that says &amp;#8220;Drop data providers here.&amp;#8221; when the canvas is empty. The &amp;#8220;Clear canvas&amp;#8221; option can just be &amp;#8220;Clear&amp;#8221; as there&amp;#8217;s really only 1 thing that can be cleared.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;*** Strike 1.5: &amp;#8220;Remove&amp;#8221; would be better than &amp;#8220;Delete&amp;#8221;. Delete makes me wonder if its going to erase my files! Remove seems more descriptive and precise. Also, drop &amp;#8220;item&amp;#8221; from the end of each right click menu option. Its redundant when every option operates on the item you clicked.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;[8]: &lt;a href=&#34;http://www.abisource.com/wiki/AbiCollab&#34;&gt;http://www.abisource.com/wiki/AbiCollab&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Keeping all your notes in sync with Dropbox and Tomboy</title>
      <link>/2009/04/17/in-sync-with-dropbox-and-tomboy/</link>
      <pubDate>Sat, 18 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/04/17/in-sync-with-dropbox-and-tomboy/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://projects.gnome.org/tomboy/&#34;&gt;Tomboy&lt;/a&gt; is a wonderful note taking program for Gnome. It has some synchronization features built-in, but not everyone has a server to store their notes for synchronizing between multiple computers.&lt;/p&gt;

&lt;p&gt;Enter &lt;a href=&#34;https://www.getdropbox.com/referrals/NTE2ODkwNDk&#34;&gt;Dropbox&lt;/a&gt;: a service for synchronizing files between computers. It works great in Gnome (Windows and Mac OSX as well).&lt;/p&gt;

&lt;p&gt;I use Dropbox for synchronizing my Tomboy notes by telling Tomboy to synchronize to a Local Folder: &lt;code&gt;~/Dropbox/Tomboy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;My one gripe is that you have to go into a note to synchronize. [Someone has filed a bug and submitted a patch][3], so hopefully it will be fixed soon.&lt;/p&gt;

&lt;p&gt;[3]: &lt;a href=&#34;http://bugzilla.gnome.org/show_bug.cgi?id=468459&#34;&gt;http://bugzilla.gnome.org/show_bug.cgi?id=468459&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why not Subversion &#43; DVCS of Choice?</title>
      <link>/2009/01/06/why-not-subversion-dvcs-of-choice/</link>
      <pubDate>Wed, 07 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/01/06/why-not-subversion-dvcs-of-choice/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://michael.susens-schurter.com/blog/2009/01/04/time-to-learn-git/&#34;&gt;A follow-up to my last post on DVCSes&amp;#8230;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://planet.gnome.org/&#34;&gt;Gnomers&lt;/a&gt; have been &lt;a href=&#34;http://wingolog.org/archives/2009/01/06/git-and-bzr&#34;&gt;discussing DVCSes a lot lately&lt;/a&gt;, and at least one seems to prefer &lt;a href=&#34;http://blogs.gnome.org/johncarr/2008/12/11/dvcs-for-gnome/&#34;&gt;bzr as the repository format and git as the protocol it speaks.&lt;/a&gt; &lt;small&gt;If this sounds like madness to you, you&amp;#8217;re not alone.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What I don&amp;#8217;t understand is why more people don&amp;#8217;t choose to keep Subversion as their repository and just use the $DVCS-svn of your choice?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Granted I&amp;#8217;ve only used &lt;a href=&#34;http://bazaar-vcs.org/BzrForeignBranches/Subversion&#34;&gt;bzr-svn&lt;/a&gt; a bit, but it worked quite well and seems to only be getting better. I hear [git-svn][6] is quite good as well (but &lt;abbrev title=&#34;if I remember correctly&#34;&gt;iirc&lt;/abbrev&gt; hg lags behind the competition).&lt;/p&gt;

&lt;p&gt;The benefits of this seem pretty nice:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Repository and Project management tools could get by with only first class Subversion support.&lt;/li&gt;
&lt;li&gt;Directing inexperienced users to download code would be standardized.&lt;/li&gt;
&lt;li&gt;Linux distributions wouldn&amp;#8217;t have to ship 5 different VCSes (cvs, svn, git, bzr, hg), although the VCSes don&amp;#8217;t take up much space.&lt;/li&gt;
&lt;li&gt;Developers could use whichever tool they preferred, publish branches to any one of the zillions of free hosts for their DVCS of choice, and get on with their life.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Answering my own question&amp;#8230;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The obvious counter argument is that in order to share code you either:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;#8230;force everyone who cares to use your DVCS.&lt;/li&gt;
&lt;li&gt;&amp;#8230;or lose some of the benefits of your chosen DVCS and share code via a SVN branch.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lets face it, both options are a pretty big hassle for &lt;em&gt;developers&lt;/em&gt;. Comprises always are.&lt;/p&gt;

&lt;p&gt;For smaller single projects the overhead associated with going this route probably isn&amp;#8217;t worth it. You&amp;#8217;ll probably either end up losing 75% of what makes a DVCS handy or just use SVN.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why is Gnome not considering this option though?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This option seems ideal for projects like Gnome. Individual modules will probably adopt a preferred DVCS, and thats fine. None of them are so different that a competent developer couldn&amp;#8217;t yank some revisions from an unfamiliar DVCS.&lt;/p&gt;

&lt;p&gt;The project as a whole (and individual modules) would continue to remain uniformly easily available through a single svn checkout.&lt;/p&gt;

&lt;p&gt;At the very least isn&amp;#8217;t this better (at least saner) than bolting git onto bzr&amp;#8217;s repository format?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Audience Participation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m not a Gnome developer though. Just a curious user. However, as a fellow developer I am left wondering: why isn&amp;#8217;t this a good option? Are $DVCS-svn connectors just not good enough? Are the comprises too great? Or the most likely: am I just missing some obvious showstopper?&lt;/p&gt;

&lt;p&gt;[6]: &lt;a href=&#34;http://www.kernel.org/pub/software/scm/git/docs/git-svn.html&#34;&gt;http://www.kernel.org/pub/software/scm/git/docs/git-svn.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fixing Gnome Notificationâ€™s Popup Location</title>
      <link>/2008/12/01/fixing-gnome-notifications-popup-location/</link>
      <pubDate>Tue, 02 Dec 2008 00:00:00 +0000</pubDate>
      
      <guid>/2008/12/01/fixing-gnome-notifications-popup-location/</guid>
      <description>&lt;p&gt;Gnome notifications popup in the lower left corner of your desktop by default* which constantly annoys me. I usually have a terminal open in the lower left corner, and having my work covered by notifications is quite annoying.&lt;/p&gt;

&lt;p&gt;Luckily the fix is easy:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open Applications &amp;gt; System Tools &amp;gt; Configuration Editor**&lt;/li&gt;
&lt;li&gt;Navigate to &lt;code&gt;apps&lt;/code&gt; &amp;gt; &lt;code&gt;notification-daemon&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Edit the &lt;code&gt;popup_location&lt;/code&gt; to be something less annoying. I prefer &lt;strong&gt;&lt;code&gt;top_right&lt;/code&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Close Configuration Editor. Changes will take effect next time you login &lt;em&gt;or&lt;/em&gt; just restart the notification-daemon: &lt;pre lang=&#34;bash&#34;&gt;~$ killall notification-daemon
~$ /usr/lib/notification-daemon/notification-daemon &amp;#038;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note that the notifications will actually show up over the top of your panel which seems a bit strange. However, I&amp;#8217;d rather the notification covered the panel than take up any more precious application space than is necessary.&lt;/p&gt;

&lt;p&gt;Luckily you can easily test notifications if you have Python and python-notify installed:&lt;/p&gt;

&lt;pre lang=&#34;python&#34;&gt;&gt;&gt;&gt; import pynotify
&gt;&gt;&gt; pynotify.init(&#39;foo&#39;)
True
&gt;&gt;&gt; pynotify.Notification(&#39;foo&#39;, &#39;bar&#39;).show()
True
&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/files/notification-top_right.png&#34; alt=&#34;Notification in the upper right.&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;at least on Gnome 2.22.3 on Debian Sid with notification-daemon 0.3.7-1+b1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;** aka &lt;a href=&#34;http://projects.gnome.org/gconf/&#34;&gt;gconf-editor&lt;/a&gt; from the [gconf-editor package][3] which should be installed with Gnome.&lt;/p&gt;

&lt;p&gt;[3]: &lt;a href=&#34;http://packages.debian.org/search?keywords=gconf-editor&amp;amp;searchon=names&amp;amp;suite=all&amp;amp;section=all&amp;amp;sourceid=mozilla-search&#34;&gt;http://packages.debian.org/search?keywords=gconf-editor&amp;amp;searchon=names&amp;amp;suite=all&amp;amp;section=all&amp;amp;sourceid=mozilla-search&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Listing All Passwords Stored in Gnome Keyring</title>
      <link>/2008/10/30/listing-all-passwords-stored-in-gnome-keyring/</link>
      <pubDate>Fri, 31 Oct 2008 00:00:00 +0000</pubDate>
      
      <guid>/2008/10/30/listing-all-passwords-stored-in-gnome-keyring/</guid>
      <description>&lt;p&gt;I was toying with writing my first desktop application in years and got distracted by how cool &lt;a href=&#34;http://live.gnome.org/GnomeKeyring&#34;&gt;Gnome Keyring&lt;/a&gt; is. Of course storing and retrieving passwords is pretty mundane, so here&amp;#8217;s a fun example that dumps all of the current user&amp;#8217;s passwords:&lt;/p&gt;

&lt;pre lang=&#34;python&#34;&gt;#!/usr/bin/env python

import pygtk
pygtk.require(&#39;2.0&#39;)
import gtk # sets app name
import gnomekeyring

def hack():
    for keyring in gnomekeyring.list_keyring_names_sync():
        for id in gnomekeyring.list_item_ids_sync(keyring):
            item = gnomekeyring.item_get_info_sync(keyring, id)
            print &#39;[%s] %s = %s&#39; % (
                    keyring, item.get_display_name(), item.get_secret())
        else:
            if len(gnomekeyring.list_item_ids_sync(keyring)) == 0:
                print &#39;[%s] --empty--&#39; % keyring

if __name__ == &#39;__main__&#39;:
    hack()
&lt;/pre&gt;

&lt;p&gt;Sample output with the interesting bits removed:&lt;/p&gt;

&lt;pre&gt;[default] Local password for user root = *******
[login] michael.schurter@Work = *******
[login] Google Account = *******
[login] Passphrase for wireless network 2WIRE939 = *******
[login] Unlock password for default keyring = *******
[login] schmichael@twitter.com = *******
[session] --empty--
&lt;/pre&gt;

&lt;p&gt;Its not meant to be any sort of real hacking tool. After all you can view all of this information via [Seahorse][2] anyway.&lt;/p&gt;

&lt;p&gt;But what fun is a &lt;em&gt;GUI&lt;/em&gt; tool? ðŸ˜‰&lt;/p&gt;

&lt;p&gt;[2]: &lt;a href=&#34;http://live.gnome.org/Seahorse&#34;&gt;http://live.gnome.org/Seahorse&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>