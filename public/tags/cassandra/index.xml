<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cassandra on schmichael&#39;s blog</title>
    <link>https://blog.schmichael.com/tags/cassandra/</link>
    <description>Recent content in Cassandra on schmichael&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 17 Jul 2010 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.schmichael.com/tags/cassandra/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Less Pagination, More More</title>
      <link>https://blog.schmichael.com/2010/07/16/less-pagination-more-more/</link>
      <pubDate>Sat, 17 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.schmichael.com/2010/07/16/less-pagination-more-more/</guid>
      <description>&lt;p&gt;We live in a brave new (to some) world of databases other than a relational database with a SQL interface. Normally end users never notice a difference, but the astute viewer may notice the slow demise of an old friend: pagination.&lt;/p&gt;

&lt;p&gt;Traditionally with SQL databases pagination has looked something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://schmichael.com/files/pagination.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;There are previous and next links as well as links for jumping right to the beginning and end. Pretty boring stuff.&lt;/p&gt;

&lt;p&gt;What&amp;#8217;s interesting is that this standard interface is disappearing in favor of something like this:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Twitter&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://schmichael.com/files/twitter-more.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Facebook&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://schmichael.com/files/facebook-more.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;And soon beta testers of &lt;a href=&#34;http://blog.urbanairship.com/2010/05/25/android-delivers-push-notifications-are-here-to-stay/&#34;&gt;Urban Airship&amp;#8217;s push service for Android&lt;/a&gt; will see a More link on the page that lists devices associated with their app:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://schmichael.com/files/apids-more.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The simplest possible explanation for this dumbing down of pagination is that &lt;strong&gt;count (for total pages) and skip/offset are expensive operations.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Not only are those operations expensive, but in eventually consistent databases, which many modern non-relational databases are, they&amp;#8217;re extremely expensive, if not impossible, to perform.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cassandra&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At Urban Airship we, like Facebook, use &lt;a href=&#34;http://cassandra.apache.org/&#34;&gt;Cassandra&lt;/a&gt;: a distributed column-based database. This deals two deadly blows to traditional pagination:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;No way to count columns in a row (without reading every column).&lt;/li&gt;
&lt;li&gt;No way to skip by numeric offset (so you can&amp;#8217;t say, skip to page 5).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In Cassandra columns are ordered, so you start reading from the beginning and read N+1 columns where N is the number of items you&amp;#8217;d like to display. The last column&amp;#8217;s key is then used to determine whether the More link is enabled, and if so, what key to start the next &amp;#8220;page&amp;#8221; at.&lt;/p&gt;

&lt;p&gt;Both of those are solvable problems if you really need them, but I would suspect you would end up creating a column count cache as well as some sort of table of contents for the various page offsets. Not what I want to spend my time implementing.&lt;/p&gt;

&lt;p&gt;The fact of the matter is that for many use cases, a simple More button works just as well (if not better) than traditional pagination. It&amp;#8217;s also far cheaper to implement, which means more developer time free to work on features and more hardware resources available to push your 140 character insights around the web.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MongoDB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I should note that MongoDB is fairly unique in the non-relational database world as its dynamic querying features include &lt;a href=&#34;http://www.mongodb.org/display/DOCS/Aggregation#Aggregation-Count&#34;&gt;count&lt;/a&gt; and [skip][8] operations. However, as with any database, you&amp;#8217;ll want to make sure these queries hit indexes.&lt;/p&gt;

&lt;p&gt;Sadly MongoDB currently doesn&amp;#8217;t have the distributed features necessary to automatically handle data too big for a single server.&lt;/p&gt;

&lt;p&gt;[8]: &lt;a href=&#34;http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D&#34;&gt;http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>